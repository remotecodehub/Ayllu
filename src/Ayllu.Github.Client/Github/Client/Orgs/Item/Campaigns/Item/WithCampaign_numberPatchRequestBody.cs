// <auto-generated/>
#pragma warning disable CS0618
using Ayllu.Github.Client.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Ayllu.Github.Client.Orgs.Item.Campaigns.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WithCampaign_numberPatchRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The contact link of the campaign. Must be a URI.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContactLink { get; set; }
#nullable restore
#else
        public string ContactLink { get; set; }
#endif
        /// <summary>A description for the campaign</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The end date and time of the campaign, in ISO 8601 format&apos;:&apos; YYYY-MM-DDTHH:MM:SSZ.</summary>
        public DateTimeOffset? EndsAt { get; set; }
        /// <summary>The logins of the users to set as the campaign managers. At this time, only a single manager can be supplied.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Managers { get; set; }
#nullable restore
#else
        public List<string> Managers { get; set; }
#endif
        /// <summary>The name of the campaign</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Indicates whether a campaign is open or closed</summary>
        public global::Ayllu.Github.Client.Models.CampaignState? State { get; set; }
        /// <summary>The slugs of the teams to set as the campaign managers.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? TeamManagers { get; set; }
#nullable restore
#else
        public List<string> TeamManagers { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Ayllu.Github.Client.Orgs.Item.Campaigns.Item.WithCampaign_numberPatchRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Ayllu.Github.Client.Orgs.Item.Campaigns.Item.WithCampaign_numberPatchRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Ayllu.Github.Client.Orgs.Item.Campaigns.Item.WithCampaign_numberPatchRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "contact_link", n => { ContactLink = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "ends_at", n => { EndsAt = n.GetDateTimeOffsetValue(); } },
                { "managers", n => { Managers = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "state", n => { State = n.GetEnumValue<global::Ayllu.Github.Client.Models.CampaignState>(); } },
                { "team_managers", n => { TeamManagers = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("contact_link", ContactLink);
            writer.WriteStringValue("description", Description);
            writer.WriteDateTimeOffsetValue("ends_at", EndsAt);
            writer.WriteCollectionOfPrimitiveValues<string>("managers", Managers);
            writer.WriteStringValue("name", Name);
            writer.WriteEnumValue<global::Ayllu.Github.Client.Models.CampaignState>("state", State);
            writer.WriteCollectionOfPrimitiveValues<string>("team_managers", TeamManagers);
        }
    }
}
#pragma warning restore CS0618
