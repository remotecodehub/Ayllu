// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Ayllu.Github.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class RateLimitOverview_resources : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The actions_runner_registration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Ayllu.Github.Client.Models.RateLimit? ActionsRunnerRegistration { get; set; }
#nullable restore
#else
        public global::Ayllu.Github.Client.Models.RateLimit ActionsRunnerRegistration { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The code_scanning_autofix property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Ayllu.Github.Client.Models.RateLimit? CodeScanningAutofix { get; set; }
#nullable restore
#else
        public global::Ayllu.Github.Client.Models.RateLimit CodeScanningAutofix { get; set; }
#endif
        /// <summary>The code_scanning_upload property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Ayllu.Github.Client.Models.RateLimit? CodeScanningUpload { get; set; }
#nullable restore
#else
        public global::Ayllu.Github.Client.Models.RateLimit CodeScanningUpload { get; set; }
#endif
        /// <summary>The code_search property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Ayllu.Github.Client.Models.RateLimit? CodeSearch { get; set; }
#nullable restore
#else
        public global::Ayllu.Github.Client.Models.RateLimit CodeSearch { get; set; }
#endif
        /// <summary>The core property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Ayllu.Github.Client.Models.RateLimit? Core { get; set; }
#nullable restore
#else
        public global::Ayllu.Github.Client.Models.RateLimit Core { get; set; }
#endif
        /// <summary>The dependency_sbom property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Ayllu.Github.Client.Models.RateLimit? DependencySbom { get; set; }
#nullable restore
#else
        public global::Ayllu.Github.Client.Models.RateLimit DependencySbom { get; set; }
#endif
        /// <summary>The dependency_snapshots property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Ayllu.Github.Client.Models.RateLimit? DependencySnapshots { get; set; }
#nullable restore
#else
        public global::Ayllu.Github.Client.Models.RateLimit DependencySnapshots { get; set; }
#endif
        /// <summary>The graphql property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Ayllu.Github.Client.Models.RateLimit? Graphql { get; set; }
#nullable restore
#else
        public global::Ayllu.Github.Client.Models.RateLimit Graphql { get; set; }
#endif
        /// <summary>The integration_manifest property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Ayllu.Github.Client.Models.RateLimit? IntegrationManifest { get; set; }
#nullable restore
#else
        public global::Ayllu.Github.Client.Models.RateLimit IntegrationManifest { get; set; }
#endif
        /// <summary>The scim property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Ayllu.Github.Client.Models.RateLimit? Scim { get; set; }
#nullable restore
#else
        public global::Ayllu.Github.Client.Models.RateLimit Scim { get; set; }
#endif
        /// <summary>The search property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Ayllu.Github.Client.Models.RateLimit? Search { get; set; }
#nullable restore
#else
        public global::Ayllu.Github.Client.Models.RateLimit Search { get; set; }
#endif
        /// <summary>The source_import property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Ayllu.Github.Client.Models.RateLimit? SourceImport { get; set; }
#nullable restore
#else
        public global::Ayllu.Github.Client.Models.RateLimit SourceImport { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Ayllu.Github.Client.Models.RateLimitOverview_resources"/> and sets the default values.
        /// </summary>
        public RateLimitOverview_resources()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Ayllu.Github.Client.Models.RateLimitOverview_resources"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Ayllu.Github.Client.Models.RateLimitOverview_resources CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Ayllu.Github.Client.Models.RateLimitOverview_resources();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "actions_runner_registration", n => { ActionsRunnerRegistration = n.GetObjectValue<global::Ayllu.Github.Client.Models.RateLimit>(global::Ayllu.Github.Client.Models.RateLimit.CreateFromDiscriminatorValue); } },
                { "code_scanning_autofix", n => { CodeScanningAutofix = n.GetObjectValue<global::Ayllu.Github.Client.Models.RateLimit>(global::Ayllu.Github.Client.Models.RateLimit.CreateFromDiscriminatorValue); } },
                { "code_scanning_upload", n => { CodeScanningUpload = n.GetObjectValue<global::Ayllu.Github.Client.Models.RateLimit>(global::Ayllu.Github.Client.Models.RateLimit.CreateFromDiscriminatorValue); } },
                { "code_search", n => { CodeSearch = n.GetObjectValue<global::Ayllu.Github.Client.Models.RateLimit>(global::Ayllu.Github.Client.Models.RateLimit.CreateFromDiscriminatorValue); } },
                { "core", n => { Core = n.GetObjectValue<global::Ayllu.Github.Client.Models.RateLimit>(global::Ayllu.Github.Client.Models.RateLimit.CreateFromDiscriminatorValue); } },
                { "dependency_sbom", n => { DependencySbom = n.GetObjectValue<global::Ayllu.Github.Client.Models.RateLimit>(global::Ayllu.Github.Client.Models.RateLimit.CreateFromDiscriminatorValue); } },
                { "dependency_snapshots", n => { DependencySnapshots = n.GetObjectValue<global::Ayllu.Github.Client.Models.RateLimit>(global::Ayllu.Github.Client.Models.RateLimit.CreateFromDiscriminatorValue); } },
                { "graphql", n => { Graphql = n.GetObjectValue<global::Ayllu.Github.Client.Models.RateLimit>(global::Ayllu.Github.Client.Models.RateLimit.CreateFromDiscriminatorValue); } },
                { "integration_manifest", n => { IntegrationManifest = n.GetObjectValue<global::Ayllu.Github.Client.Models.RateLimit>(global::Ayllu.Github.Client.Models.RateLimit.CreateFromDiscriminatorValue); } },
                { "scim", n => { Scim = n.GetObjectValue<global::Ayllu.Github.Client.Models.RateLimit>(global::Ayllu.Github.Client.Models.RateLimit.CreateFromDiscriminatorValue); } },
                { "search", n => { Search = n.GetObjectValue<global::Ayllu.Github.Client.Models.RateLimit>(global::Ayllu.Github.Client.Models.RateLimit.CreateFromDiscriminatorValue); } },
                { "source_import", n => { SourceImport = n.GetObjectValue<global::Ayllu.Github.Client.Models.RateLimit>(global::Ayllu.Github.Client.Models.RateLimit.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Ayllu.Github.Client.Models.RateLimit>("actions_runner_registration", ActionsRunnerRegistration);
            writer.WriteObjectValue<global::Ayllu.Github.Client.Models.RateLimit>("code_scanning_autofix", CodeScanningAutofix);
            writer.WriteObjectValue<global::Ayllu.Github.Client.Models.RateLimit>("code_scanning_upload", CodeScanningUpload);
            writer.WriteObjectValue<global::Ayllu.Github.Client.Models.RateLimit>("code_search", CodeSearch);
            writer.WriteObjectValue<global::Ayllu.Github.Client.Models.RateLimit>("core", Core);
            writer.WriteObjectValue<global::Ayllu.Github.Client.Models.RateLimit>("dependency_sbom", DependencySbom);
            writer.WriteObjectValue<global::Ayllu.Github.Client.Models.RateLimit>("dependency_snapshots", DependencySnapshots);
            writer.WriteObjectValue<global::Ayllu.Github.Client.Models.RateLimit>("graphql", Graphql);
            writer.WriteObjectValue<global::Ayllu.Github.Client.Models.RateLimit>("integration_manifest", IntegrationManifest);
            writer.WriteObjectValue<global::Ayllu.Github.Client.Models.RateLimit>("scim", Scim);
            writer.WriteObjectValue<global::Ayllu.Github.Client.Models.RateLimit>("search", Search);
            writer.WriteObjectValue<global::Ayllu.Github.Client.Models.RateLimit>("source_import", SourceImport);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
