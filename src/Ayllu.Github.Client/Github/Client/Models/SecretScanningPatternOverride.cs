// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Ayllu.Github.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SecretScanningPatternOverride : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The total number of alerts generated by this pattern.</summary>
        public int? AlertTotal { get; set; }
        /// <summary>The percentage of all alerts that this pattern represents, rounded to the nearest integer.</summary>
        public int? AlertTotalPercentage { get; set; }
        /// <summary>The percentage of blocks for this pattern that were bypassed, rounded to the nearest integer.</summary>
        public int? BypassRate { get; set; }
        /// <summary>The version of this pattern if it&apos;s a custom pattern.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomPatternVersion { get; set; }
#nullable restore
#else
        public string CustomPatternVersion { get; set; }
#endif
        /// <summary>The default push protection setting for this pattern.</summary>
        public global::Ayllu.Github.Client.Models.SecretScanningPatternOverride_default_setting? DefaultSetting { get; set; }
        /// <summary>The user-friendly name for the pattern.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>The push protection setting for this pattern set at the enterprise level. Only present for partner patterns when the organization has a parent enterprise.</summary>
        public global::Ayllu.Github.Client.Models.SecretScanningPatternOverride_enterprise_setting? EnterpriseSetting { get; set; }
        /// <summary>The percentage of alerts from this pattern that are false positives, rounded to the nearest integer.</summary>
        public int? FalsePositiveRate { get; set; }
        /// <summary>The number of false positive alerts generated by this pattern.</summary>
        public int? FalsePositives { get; set; }
        /// <summary>The current push protection setting for this pattern. If this is `not-set`, then it inherits either the enterprise setting if it exists or the default setting.</summary>
        public global::Ayllu.Github.Client.Models.SecretScanningPatternOverride_setting? Setting { get; set; }
        /// <summary>The slug of the pattern.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Slug { get; set; }
#nullable restore
#else
        public string Slug { get; set; }
#endif
        /// <summary>The ID of the pattern.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TokenType { get; set; }
#nullable restore
#else
        public string TokenType { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Ayllu.Github.Client.Models.SecretScanningPatternOverride"/> and sets the default values.
        /// </summary>
        public SecretScanningPatternOverride()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Ayllu.Github.Client.Models.SecretScanningPatternOverride"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Ayllu.Github.Client.Models.SecretScanningPatternOverride CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Ayllu.Github.Client.Models.SecretScanningPatternOverride();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "alert_total", n => { AlertTotal = n.GetIntValue(); } },
                { "alert_total_percentage", n => { AlertTotalPercentage = n.GetIntValue(); } },
                { "bypass_rate", n => { BypassRate = n.GetIntValue(); } },
                { "custom_pattern_version", n => { CustomPatternVersion = n.GetStringValue(); } },
                { "default_setting", n => { DefaultSetting = n.GetEnumValue<global::Ayllu.Github.Client.Models.SecretScanningPatternOverride_default_setting>(); } },
                { "display_name", n => { DisplayName = n.GetStringValue(); } },
                { "enterprise_setting", n => { EnterpriseSetting = n.GetEnumValue<global::Ayllu.Github.Client.Models.SecretScanningPatternOverride_enterprise_setting>(); } },
                { "false_positive_rate", n => { FalsePositiveRate = n.GetIntValue(); } },
                { "false_positives", n => { FalsePositives = n.GetIntValue(); } },
                { "setting", n => { Setting = n.GetEnumValue<global::Ayllu.Github.Client.Models.SecretScanningPatternOverride_setting>(); } },
                { "slug", n => { Slug = n.GetStringValue(); } },
                { "token_type", n => { TokenType = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("alert_total", AlertTotal);
            writer.WriteIntValue("alert_total_percentage", AlertTotalPercentage);
            writer.WriteIntValue("bypass_rate", BypassRate);
            writer.WriteStringValue("custom_pattern_version", CustomPatternVersion);
            writer.WriteEnumValue<global::Ayllu.Github.Client.Models.SecretScanningPatternOverride_default_setting>("default_setting", DefaultSetting);
            writer.WriteStringValue("display_name", DisplayName);
            writer.WriteEnumValue<global::Ayllu.Github.Client.Models.SecretScanningPatternOverride_enterprise_setting>("enterprise_setting", EnterpriseSetting);
            writer.WriteIntValue("false_positive_rate", FalsePositiveRate);
            writer.WriteIntValue("false_positives", FalsePositives);
            writer.WriteEnumValue<global::Ayllu.Github.Client.Models.SecretScanningPatternOverride_setting>("setting", Setting);
            writer.WriteStringValue("slug", Slug);
            writer.WriteStringValue("token_type", TokenType);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
