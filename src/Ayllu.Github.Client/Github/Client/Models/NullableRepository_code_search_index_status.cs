// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Ayllu.Github.Client.Models
{
    /// <summary>
    /// The status of the code search index for this repository
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class NullableRepository_code_search_index_status : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The lexical_commit_sha property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LexicalCommitSha { get; set; }
#nullable restore
#else
        public string LexicalCommitSha { get; set; }
#endif
        /// <summary>The lexical_search_ok property</summary>
        public bool? LexicalSearchOk { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Ayllu.Github.Client.Models.NullableRepository_code_search_index_status"/> and sets the default values.
        /// </summary>
        public NullableRepository_code_search_index_status()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Ayllu.Github.Client.Models.NullableRepository_code_search_index_status"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Ayllu.Github.Client.Models.NullableRepository_code_search_index_status CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Ayllu.Github.Client.Models.NullableRepository_code_search_index_status();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "lexical_commit_sha", n => { LexicalCommitSha = n.GetStringValue(); } },
                { "lexical_search_ok", n => { LexicalSearchOk = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("lexical_commit_sha", LexicalCommitSha);
            writer.WriteBoolValue("lexical_search_ok", LexicalSearchOk);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
