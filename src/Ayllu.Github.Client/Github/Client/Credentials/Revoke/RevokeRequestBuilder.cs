// <auto-generated/>
#pragma warning disable CS0618
using Ayllu.Github.Client.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Ayllu.Github.Client.Credentials.Revoke
{
    /// <summary>
    /// Builds and executes requests for operations under \credentials\revoke
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class RevokeRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Ayllu.Github.Client.Credentials.Revoke.RevokeRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public RevokeRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/credentials/revoke", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Ayllu.Github.Client.Credentials.Revoke.RevokeRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public RevokeRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/credentials/revoke", rawUrl)
        {
        }
        /// <summary>
        /// Submit a list of credentials to be revoked. This endpoint is intended to revoke credentials the caller does not own and may have found exposed on GitHub.com or elsewhere. It can also be used for credentials associated with an old user account that you no longer have access to. Credential owners will be notified of the revocation.This endpoint currently accepts the following credential types:- Personal access tokens (classic)- Fine-grained personal access tokensRevoked credentials may impact users on GitHub Free, Pro, &amp; Team and GitHub Enterprise Cloud, and GitHub Enterprise Cloud with Enterprise Managed Users.GitHub cannot reactivate any credentials that have been revoked; new credentials will need to be generated.To prevent abuse, this API is limited to only 60 unauthenticated requests per hour and a max of 1000 tokens per API request.&gt; [!NOTE]&gt; Any authenticated requests will return a 403.
        /// API method documentation <see href="https://docs.github.com/rest/credentials/revoke#revoke-a-list-of-credentials" />
        /// </summary>
        /// <returns>A <see cref="global::Ayllu.Github.Client.Credentials.Revoke.RevokePostResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Ayllu.Github.Client.Models.ValidationErrorSimple">When receiving a 422 status code</exception>
        /// <exception cref="global::Ayllu.Github.Client.Models.BasicError">When receiving a 500 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Ayllu.Github.Client.Credentials.Revoke.RevokePostResponse?> PostAsRevokePostResponseAsync(global::Ayllu.Github.Client.Credentials.Revoke.RevokePostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Ayllu.Github.Client.Credentials.Revoke.RevokePostResponse> PostAsRevokePostResponseAsync(global::Ayllu.Github.Client.Credentials.Revoke.RevokePostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "422", global::Ayllu.Github.Client.Models.ValidationErrorSimple.CreateFromDiscriminatorValue },
                { "500", global::Ayllu.Github.Client.Models.BasicError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Ayllu.Github.Client.Credentials.Revoke.RevokePostResponse>(requestInfo, global::Ayllu.Github.Client.Credentials.Revoke.RevokePostResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Submit a list of credentials to be revoked. This endpoint is intended to revoke credentials the caller does not own and may have found exposed on GitHub.com or elsewhere. It can also be used for credentials associated with an old user account that you no longer have access to. Credential owners will be notified of the revocation.This endpoint currently accepts the following credential types:- Personal access tokens (classic)- Fine-grained personal access tokensRevoked credentials may impact users on GitHub Free, Pro, &amp; Team and GitHub Enterprise Cloud, and GitHub Enterprise Cloud with Enterprise Managed Users.GitHub cannot reactivate any credentials that have been revoked; new credentials will need to be generated.To prevent abuse, this API is limited to only 60 unauthenticated requests per hour and a max of 1000 tokens per API request.&gt; [!NOTE]&gt; Any authenticated requests will return a 403.
        /// API method documentation <see href="https://docs.github.com/rest/credentials/revoke#revoke-a-list-of-credentials" />
        /// </summary>
        /// <returns>A <see cref="global::Ayllu.Github.Client.Credentials.Revoke.RevokeResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Ayllu.Github.Client.Models.ValidationErrorSimple">When receiving a 422 status code</exception>
        /// <exception cref="global::Ayllu.Github.Client.Models.BasicError">When receiving a 500 status code</exception>
        [Obsolete("This method is obsolete. Use PostAsRevokePostResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Ayllu.Github.Client.Credentials.Revoke.RevokeResponse?> PostAsync(global::Ayllu.Github.Client.Credentials.Revoke.RevokePostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Ayllu.Github.Client.Credentials.Revoke.RevokeResponse> PostAsync(global::Ayllu.Github.Client.Credentials.Revoke.RevokePostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "422", global::Ayllu.Github.Client.Models.ValidationErrorSimple.CreateFromDiscriminatorValue },
                { "500", global::Ayllu.Github.Client.Models.BasicError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Ayllu.Github.Client.Credentials.Revoke.RevokeResponse>(requestInfo, global::Ayllu.Github.Client.Credentials.Revoke.RevokeResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Submit a list of credentials to be revoked. This endpoint is intended to revoke credentials the caller does not own and may have found exposed on GitHub.com or elsewhere. It can also be used for credentials associated with an old user account that you no longer have access to. Credential owners will be notified of the revocation.This endpoint currently accepts the following credential types:- Personal access tokens (classic)- Fine-grained personal access tokensRevoked credentials may impact users on GitHub Free, Pro, &amp; Team and GitHub Enterprise Cloud, and GitHub Enterprise Cloud with Enterprise Managed Users.GitHub cannot reactivate any credentials that have been revoked; new credentials will need to be generated.To prevent abuse, this API is limited to only 60 unauthenticated requests per hour and a max of 1000 tokens per API request.&gt; [!NOTE]&gt; Any authenticated requests will return a 403.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Ayllu.Github.Client.Credentials.Revoke.RevokePostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Ayllu.Github.Client.Credentials.Revoke.RevokePostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Ayllu.Github.Client.Credentials.Revoke.RevokeRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Ayllu.Github.Client.Credentials.Revoke.RevokeRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Ayllu.Github.Client.Credentials.Revoke.RevokeRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class RevokeRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
